---
- name: aap_subscription | Get subscriptions with a filter
  when:
    - bootstrap_rh_pool_id | default('', true) | trim | length == 0
    - bootstrap_aap_license_manifest | default('', true) | trim | length == 0
  block:
    - name: aap_subscription | Query Subscription
      ansible.controller.subscriptions:
        username: "{{ bootstrap_rh_username }}"
        password: "{{ bootstrap_rh_password }}"
        filters:
          product_name: "{{ bootstrap_rh_filter_product_name }}"
          support_level: "{{ bootstrap_rh_filter_support_level }}"
        controller_host: "{{ bootstrap_controller_hostname }}"
        controller_username: "{{ bootstrap_controller_username }}"
        controller_password: "{{ bootstrap_controller_password }}"
        validate_certs: "{{ controller_validate_certs | default(false) }}"
      register: subscription
      retries: 10
      delay: 5
      until: subscription is not failed

    - name: aap_subscription | Set pool based on subscription
      ansible.builtin.set_fact:
        bootstrap_rh_pool_id: "{{ subscription.subscriptions[0].pool_id }}"

- name: aap_subscription | Verify License Manifest Exists
  when:
    - bootstrap_aap_license_manifest | default('', true) | trim | length > 0
  block:
    - name: aap_subscription | Check if license file exists
      ansible.builtin.stat:
        path: "{{ bootstrap_aap_license_manifest }}"
      register: aap_license_manifest_stat

    - name: aap_subscription | Verify license file exists
      ansible.builtin.assert:
        that:
          - aap_license_manifest_stat.stat.exists
        quiet: true
        fail_msg: "AAP Manifest File at '{{ bootstrap_aap_license_manifest }}' Does Not Exist"

- name: aap_subscription | Attach to a pool
  ansible.controller.license:
    pool_id: "{{ bootstrap_rh_pool_id | default(omit, true) }}"
    manifest: "{{ bootstrap_aap_license_manifest | default(omit, true) }}"
    controller_host: "{{ bootstrap_controller_hostname }}"
    controller_username: "{{ bootstrap_controller_username }}"
    controller_password: "{{ bootstrap_controller_password }}"
    validate_certs: "{{ controller_validate_certs | default(false) }}"
...
