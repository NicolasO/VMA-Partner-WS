---

- name: _process_vm | Initialize VM Variables
  ansible.builtin.set_fact:
    _vm_to_process: {}
    _vm_candidates: []

- name: _process_vm | Verify Name or ID or Path specified for VM
  ansible.builtin.assert:
    that:
      - "'name' in vm_to_process or 'id' in vm_to_process or 'path' in vm_to_process"
    quiet: true
    fail_msg: "'name' or 'id' or 'path' not specified for VM"

- name: _process_vm | Locate VM by name
  ansible.builtin.set_fact:
    _vm_candidates: "{{ _mtv_inventory_vms | selectattr('name', 'equalto', vm_to_process['name']) | list }}"
  when: "'name' in vm_to_process and 'id' not in vm_to_process and 'path' not in vm_to_process"

- name: _process_vm | Locate VM by id
  ansible.builtin.set_fact:
    _vm_candidates: "{{ _mtv_inventory_vms | selectattr('id', 'equalto', vm_to_process['id']) | list }}"
  when: "'id' in vm_to_process and 'name' not in vm_to_process and 'path' not in vm_to_process"

- name: _process_vm | Locate VM by path
  ansible.builtin.set_fact:
    _vm_candidates: "{{ _mtv_inventory_vms | selectattr('path', 'equalto', vm_to_process['path']) | list }}"
  when: "'path' in vm_to_process and 'id' not in vm_to_process and 'name' not in vm_to_process"

- name: _process_vm | Verify single VM found
  ansible.builtin.assert:
    that:
      - _vm_candidates is defined and _vm_candidates | length == 1
    quiet: true
    fail_msg: "Failed to locate VM with {{ 'id of ' + vm_to_process['id'] if 'id' in vm_to_process else 'path of ' + vm_to_process['path'] if 'path' in vm_to_process else vm_to_process['name'] }}" # noqa: yaml[line-length]

- name: _process_vm | Set VM to Process
  ansible.builtin.set_fact:
    _vm_to_process: "{{ _vm_candidates | first }}"

- name: _process_vm | Add VM to Migration Dict
  ansible.builtin.set_fact:
    _mtv_vms_to_migrate: "{{ _mtv_vms_to_migrate | default({}) | ansible.builtin.combine({_vm_to_process.id: ({'id': _vm_to_process.id, 'name': _vm_to_process.name} | ansible.builtin.combine(folder_overrides | default({}), recursive=true) | ansible.builtin.combine(mtv_migrate_migration_request['vm_overrides'] | default({}), recursive=true) | ansible.builtin.combine(vm_to_process['overrides'] | default({}), recursive=true))}, recursive=true) }}" # noqa: yaml[line-length]
  when:
    - mtv_migrate_migration_request['vms'] | default([]) | selectattr('exclude', 'defined') | selectattr('exclude', 'equalto', true) | selectattr('name', 'defined') | selectattr('name', 'equalto', _vm_to_process['name']) | list | length == 0 # noqa: yaml[line-length]
    - mtv_migrate_migration_request['vms'] | default([]) | selectattr('exclude', 'defined') | selectattr('exclude', 'equalto', true) | selectattr('id', 'defined') | selectattr('id', 'equalto', _vm_to_process['id']) | list | length == 0 # noqa: yaml[line-length]
    - mtv_migrate_migration_request['vms'] | default([]) | selectattr('exclude', 'defined') | selectattr('exclude', 'equalto', true) | selectattr('path', 'defined') | selectattr('path', 'equalto', _vm_to_process['path']) | list | length == 0 # noqa: yaml[line-length]
    - not _vm_to_process['isTemplate'] | default(false)

- name: _process_vm | Clear VM Variables
  ansible.builtin.set_fact:
    _vm_to_process: {}
...
