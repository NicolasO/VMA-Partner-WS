---
aap_seed_secure_logging: "{{ secure_logging | default(true) }}"
aap_seed_migration_hub: []
aap_seed_aap_namespace: "{{ aap_namespace }}"
aap_seed_aap_channel: "{{ aap_channel }}"
aap_seed_aap_instance_name: "{{ aap_instance_name }}"
aap_seed_aap_org_name: "{{ aap_org_name }}"
aap_seed_controller_username: "{{ controller_username | default(aap_username) | default(lookup('ansible.builtin.env', 'CONTROLLER_USERNAME')) }}" # noqa: yaml[line-length]
aap_seed_controller_password: "{{ controller_password | default(aap_password) | default(lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD')) }}" # noqa: yaml[line-length]
aap_seed_controller_hostname: "{{ controller_hostname | default(aap_hostname) | default(lookup('ansible.builtin.env', 'CONTROLLER_HOSTNAME')) }}" # noqa: yaml[line-length]
aap_seed_controller_validate_certs: "{{ controller_validate_certs | default(aap_validate_certs) | default(lookup('ansible.builtin.env', 'CONTROLLER_VERIFY_SSL')) }}" # noqa: yaml[line-length]
aap_seed_cac_collection: "{{ 'infra.controller_configuration' if aap_version is defined and aap_version is version('2.5', '<') else 'infra.aap_configuration' }}" # noqa: yaml[line-length]
aap_seed_controller_organizations_var: "{{ 'controller_organizations' if aap_version is defined and aap_version is version('2.5', '<') else 'aap_organizations' }}" # noqa: yaml[line-length]

# General controller vars
aap_seed_controller_configuration_async_retries: 60
aap_seed_controller_dependency_check: false

# Vars set which are either passed via a custom credential from the Bootstrap AAP, or set from a playbook
aap_seed_aap_inventory: openshift_virtualization_migration
aap_seed_aap_version: "{{ aap_version | default(2.5) }}"
aap_seed_aap_execution_environment: "{{ aap_execution_environment }}"
aap_seed_aap_execution_environment_image: "{{ aap_execution_environment_image }}"
aap_seed_aap_project: "{{ aap_project }}"
aap_seed_aap_project_branch: "{{ aap_project_branch }}"
aap_seed_aap_project_repo: "{{ aap_project_repo }}"
aap_seed_automation_hub_certified_url: "{{ automation_hub_certified_url }}"
aap_seed_automation_hub_certified_auth_url: "{{ automation_hub_certified_auth_url }}"
aap_seed_automation_hub_certified_token: "{{ automation_hub_certified_token }}"
aap_seed_automation_hub_validated_url: "{{ automation_hub_validated_url }}"
aap_seed_automation_hub_validated_auth_url: "{{ automation_hub_validated_auth_url }}"
aap_seed_automation_hub_validated_token: "{{ automation_hub_validated_token }}"

aap_seed_git_username: "{{ (git_username is defined) | ansible.builtin.ternary(git_username, '') }}"
aap_seed_git_password: "{{ (git_password is defined) | ansible.builtin.ternary(git_password, '') }}"
aap_seed_git_ssh_private_key: "{{ (git_ssh_private_key is defined) | ansible.builtin.ternary(git_ssh_private_key, '') }}" # noqa: yaml[line-length]
aap_seed_git_ssh_key_passphrase: "{{ (git_ssh_key_passphrase is defined) | ansible.builtin.ternary(git_ssh_key_passphrase, '') }}" # noqa: yaml[line-length]

# Some vars are in a separate credential and pulled out of the environment with a lookup
aap_seed_vmware_host: "{{ vmware_host }}"
aap_seed_vmware_user: "{{ vmware_user }}"
aap_seed_vmware_password: "{{ vmware_password }}"
aap_seed_vmware_validate_certs: "{{ vmware_validate_certs }}"
aap_seed_vmware_cacert: "{{ vmware_cacert }}"
aap_seed_vmware_context_path: "{{ vmware_context_path }}"
aap_seed_container_host: "{{ container_host }}"
aap_seed_container_password: "{{ container_password }}"
aap_seed_container_username: "{{ container_username }}"
aap_seed_container_verify_ssl: "{{ container_verify_ssl | default(false) }}"
aap_seed_aap_job_template_extra_vars: "{{ aap_job_template_extra_vars | default('{}') }}"
aap_seed_migration_targets: "{{ migration_targets | default([]) }}"

# Default Management Hub Operators
aap_seed_operator_management_hub:
  - acm
  - oadp
  - far
  - nho

# Default Spoke Operators
aap_seed_operator_management_spoke:
  - mtv
  - cnv
  - oadp
  - far
  - nmstate
  - nho

aap_seed_controller_credentials:
  - name: Red Hat Automation Hub Certified
    description: Red Hat Automation Hub Certified Credential
    organization: "{{ aap_seed_aap_org_name }}"
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: "{{ aap_seed_automation_hub_certified_url }}"
      auth_url: "{{ aap_seed_automation_hub_certified_auth_url }}"
      token: "{{ aap_seed_automation_hub_certified_token }}"
  - name: Red Hat Automation Hub Validated
    description: Red Hat Automation Hub Validated Credential
    organization: "{{ aap_seed_aap_org_name }}"
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: "{{ aap_seed_automation_hub_validated_url }}"
      auth_url: "{{ aap_seed_automation_hub_validated_auth_url }}"
      token: "{{ aap_seed_automation_hub_validated_token }}"
  - name: Quay
    description: Quay credential
    organization: "{{ aap_seed_aap_org_name }}"
    credential_type: Container Registry
    inputs:
      host: "{{ aap_seed_container_host }}"
      password: "{{ aap_seed_container_password }}"
      username: "{{ aap_seed_container_username }}"
      verify_ssl: "{{ aap_seed_container_verify_ssl }}"

aap_seed_controller_credential_types:
  - name: openshift_virtualization_migration_cac
    description: OpenShift Virtualization Migration Config-as-Code Data structure
    organization: "{{ aap_seed_aap_org_name }}"
    kind: cloud
    inputs:
      fields:
        - id: aap_version
          type: string
          label: AAP Version
        - id: aap_instance_name
          type: string
          label: AAP Instance Name
        - id: aap_execution_environment
          type: string
          label: AAP Execution Environment
        - id: aap_org_name
          type: string
          label: AAP Org Name
        - id: aap_namespace
          type: string
          label: AAP Namespace
        - id: aap_project
          type: string
          label: AAP Project Name
        - id: aap_inventory
          type: string
          label: AAP Inventory
        - id: aap_job_template_extra_vars
          type: string
          label: Job Template Extra Variables
          secret: true
        - id: migration_targets
          type: string
          label: Migration Targets
          multiline: true
          secret: true
      required:
        - aap_version
        - aap_instance_name
        - aap_execution_environment
        - aap_org_name
        - aap_project
        - aap_inventory
    injectors:
      extra_vars:
        aap_version: "{% raw %}{  { aap_version }}{% endraw %}"
        aap_instance_name: "{% raw %}{  { aap_instance_name }}{% endraw %}"
        aap_execution_environment: "{% raw %}{  { aap_execution_environment }}{% endraw %}"
        aap_org_name: "{% raw %}{  { aap_org_name }}{% endraw %}"
        aap_project: "{% raw %}{  { aap_project }}{% endraw %}"
        aap_inventory: "{% raw %}{  { aap_inventory }}{% endraw %}"
        aap_namespace: "{% raw %}{  { aap_namespace }}{% endraw %}"
        aap_job_template_extra_vars: "{% raw %}{  { aap_job_template_extra_vars }}{% endraw %}"
        provided_migration_targets: "{% raw %}{  { migration_targets }}{% endraw %}"
  - name: VMware Migration Target
    description: Migration Target for VMware
    organization: "{{ aap_seed_aap_org_name }}"
    kind: cloud
    inputs:
      fields:
        - id: name
          type: string
          label: Target Name
        - id: host
          type: string
          label: VCenter Host
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
        - id: insecure_ssl
          type: boolean
          label: Skip Validate VMware Certificate Verification
        - id: cacert
          type: string
          label: VMware CA Certificate
          multiline: true
        - id: context_path
          type: string
          label: VMware Context Path
        - id: credentials_secret_ref
          type: string
          label: Credentials Secret Reference
        - id: vddk_init_image
          type: string
          label: VDDK Init Image
        - id: vddk_init_image_username
          type: string
          label: VDDK Init Image Username
        - id: vddk_init_image_password
          type: string
          label: VDDK Init Image Password
          secret: true
        - id: vddk_init_image_credentials_secret
          type: string
          label: VDDK Init Image Credentials Secret
        - id: provider_name
          type: string
          label: Provider source
      required:
        - name
        - host
        - provider_name
    injectors:
      extra_vars:
        vmware_target_name: "{% raw %}{  { name }}{% endraw %}"
        vmware_insecure_ssl: "{% raw %}{  { insecure_ssl }}{% endraw %}"
        vmware_cacert: "{% raw %}{  { cacert }}{% endraw %}"
        vmware_context_path: "{% raw %}{  { context_path }}{% endraw %}"
        vmware_credentials_secret_ref: "{% raw %}{  { credentials_secret_ref }}{% endraw %}"
        vmware_vddk_init_image: "{% raw %}{  { vddk_init_image }}{% endraw %}"
        vmware_vddk_init_image_username: "{% raw %}{  { vddk_init_image_username }}{% endraw %}"
        vmware_vddk_init_image_password: "{% raw %}{  { vddk_init_image_password }}{% endraw %}"
        vmware_vddk_init_image_credentials_secret: "{% raw %}{  { vddk_init_image_credentials_secret }}{% endraw %}"
        provider: "{% raw %}{  { provider_name }}{% endraw %}"
      env:
        VMWARE_HOST: "{% raw %}{  { host }}{% endraw %}"
        VMWARE_USER: "{% raw %}{  { username }}{% endraw %}"
        VMWARE_PASSWORD: "{% raw %}{  { password }}{% endraw %}"
  - name: Ovirt Migration Target
    description: Migration Target for Ovirt
    organization: "{{ aap_seed_aap_org_name }}"
    kind: cloud
    inputs:
      fields:
        - id: name
          type: string
          label: Target Name
        - id: host
          type: string
          label: Ovirt Host
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
        - id: insecure_ssl
          type: boolean
          label: Skip Validate Ovirt Certificate Verification
        - id: cacert
          type: string
          label: Ovirt CA Certificate
          multiline: true
        - id: context_path
          type: string
          label: Ovirt Context Path
        - id: credentials_secret_ref
          type: string
          label: Credentials Secret Reference
        - id: provider_name
          type: string
          label: Provider source
      required:
        - name
        - host
        - provider_name
    injectors:
      extra_vars:
        ovirt_target_name: "{% raw %}{  { name }}{% endraw %}"
        ovirt_insecure_ssl: "{% raw %}{  { insecure_ssl }}{% endraw %}"
        ovirt_cacert: "{% raw %}{  { cacert }}{% endraw %}"
        ovirt_context_path: "{% raw %}{  { context_path }}{% endraw %}"
        ovirt_credentials_secret_ref: "{% raw %}{  { credentials_secret_ref }}{% endraw %}"
        provider: "{% raw %}{  { provider_name }}{% endraw %}"
      env:
        OVIRT_HOST: "{% raw %}{  { host }}{% endraw %}"
        OVIRT_USER: "{% raw %}{  { username }}{% endraw %}"
        OVIRT_PASSWORD: "{% raw %}{  { password }}{% endraw %}"
aap_seed_controller_organizations:
  - name: "{{ aap_seed_aap_org_name }}"
    galaxy_credentials:
      - Red Hat Automation Hub Certified
      - Red Hat Automation Hub Validated
      - Ansible Galaxy
aap_seed_controller_projects:
  - name: "{{ aap_seed_aap_project }}"
    organization: "{{ aap_seed_aap_org_name }}"
    scm_branch: "{{ aap_seed_aap_project_branch }}"
    scm_clean: "no"
    scm_delete_on_update: "no"
    scm_type: git
    scm_update_on_launch: "yes"
    scm_url: "{{ aap_seed_aap_project_repo }}"
    credential: GitLab
    local_path: infra/openshift_virtualization_migration
aap_seed_controller_execution_environments:
  - name: "{{ aap_seed_aap_execution_environment }}"
    image: "{{ aap_seed_aap_execution_environment_image }}"
    pull: always
    credential: Quay
aap_seed_controller_inventories:
  - name: "{{ aap_seed_aap_inventory }}"
    organization: "{{ aap_seed_aap_org_name }}"
aap_seed_controller_hosts:
  - name: localhost
    inventory: "{{ aap_seed_aap_inventory }}"
    variables:
      ansible_connection: local
      ansible_python_interpreter: "{  { ansible_playbook_python }}"
aap_seed_controller_templates:
  - name: OpenShift Virtualization Migration - Migrate
    organization: "{{ aap_seed_aap_org_name }}"
    project: "{{ aap_seed_aap_project }}"
    job_type: run
    ask_variables_on_launch: true
    extra_vars: "{{ aap_seed_aap_job_template_extra_vars }}"
    playbook: playbooks/mtv_migrate.yml
    inventory: "{{ aap_seed_aap_inventory }}"
    execution_environment: "{{ aap_seed_aap_execution_environment }}"
    ask_credential_on_launch: true
#     credentials:
#       - Kubeconfig
#       - aap_seed_cac

aap_seed_controller_workflow_launch_jobs:
#   - name: Configure OpenShift Virtualization Migration - Deploy OpenShift Operators and Configure Migration Targets
#     wait: false
...
