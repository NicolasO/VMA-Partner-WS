---

- name: _process_vm | Initialize VM Patch Variable
  ansible.builtin.set_fact:
    vm_hot_plug_patch: {}

- name: _process_vm | Process Compute Hot Plug
  when: "'compute' in vm_hot_plug_vm"
  ansible.builtin.include_tasks:
    file: _compute.yml

- name: _process_vm | Update VirtualMachine
  when: vm_hot_plug_patch.keys() | length > 0
  redhat.openshift_virtualization.kubevirt_vm:
    api_key: "{{ vm_hot_plug_api_key }}"
    host: "{{ vm_hot_plug_openshift_host }}"
    validate_certs: "{{ vm_hot_plug_openshift_verify_ssl }}"
    namespace: "{{ vm_hot_plug_vm.response_obj.metadata.namespace }}"
    name: "{{ vm_hot_plug_vm.response_obj.metadata.name }}"
    spec: "{{ vm_hot_plug_patch }}"

- name: _process_vm | Query VM for Updated Configuration
  kubernetes.core.k8s_info:
    api_key: "{{ vm_hot_plug_api_key }}"
    host: "{{ vm_hot_plug_openshift_host }}"
    api_version: "{{ vm_hot_plug_kubevirt_api_version }}"
    kind: VirtualMachine
    namespace: "{{ vm_hot_plug_vm.response_obj.metadata.namespace }}"
    name: "{{ vm_hot_plug_vm.response_obj.metadata.name }}"
    validate_certs: "{{ vm_hot_plug_openshift_verify_ssl }}"
  register: vm_hot_plug_update_response

- name: _process_vm | Restart the machine
  when: "'resources' in vm_hot_plug_update_response and vm_hot_plug_update_response | length > 0  and 'status' in vm_hot_plug_update_response.resources[0] and 'conditions' in vm_hot_plug_update_response.resources[0].status and vm_hot_plug_update_response.resources[0].status.conditions | selectattr('type', 'equalto', 'RestartRequired') | list | length > 0 " # noqa: yaml[line-length]
  block:
    - name: _process_vm | Restart the VirtualMachine
      ansible.builtin.include_role:
        name: infra.openshift_virtualization_migration.vm_lifecycle
        tasks_from: _perform_operation.yml
      vars:
        vm_lifecycle_openshift_api_key: "{{ vm_hot_plug_api_key }}"
        vm_lifecycle_openshift_host: "{{ vm_hot_plug_openshift_host }}"
        vm_lifecycle_openshift_verify_ssl: "{{ vm_hot_plug_openshift_verify_ssl }}"
        vm_operations_vm:
          vm: "{{ vm_hot_plug_vm.response_obj }}"
          operation: restart
    - name: _process_vm | Verify the VirtualMachine restarted
      ansible.builtin.include_role:
        name: infra.openshift_virtualization_migration.vm_lifecycle
        tasks_from: _verify_operation.yml
      vars:
        vm_lifecycle_openshift_api_key: "{{ vm_hot_plug_api_key }}"
        vm_lifecycle_openshift_host: "{{ vm_hot_plug_openshift_host }}"
        vm_lifecycle_openshift_verify_ssl: "{{ vm_hot_plug_openshift_verify_ssl }}"
        vm_operations_vm:
          vm: "{{ vm_hot_plug_vm.response_obj }}"
          operation: restart
...
